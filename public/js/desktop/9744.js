/*! For license information please see 9744.js.LICENSE.txt */
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9744],{18646:(e,t,n)=>{n.d(t,{A:()=>r});var s=n(45627),a=n.n(s),i=n(76798),o=n.n(i)()(a());o.push([e.id,".form-control[data-v-1deea1f8]:focus{background-color:#fff;border-color:#f08b23;box-shadow:0 0 0 .2rem rgba(240,139,35,.25);color:#495057;outline:0}.last_message[data-v-1deea1f8]{max-height:50px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.active[data-v-1deea1f8]{background:#f08b23!important;border-color:#f08b23!important}.scrollable[data-v-1deea1f8]{max-height:calc(100vh - 6.9rem);overflow-y:auto}.typer[data-v-1deea1f8]{align-items:center;background-color:#fff;border:2px solid #f08b23;border-radius:5px;bottom:0;box-sizing:border-box;display:flex;height:4.9rem;width:100%}.typer input[type=text][data-v-1deea1f8]{background-color:transparent;border:none;font-size:1.25rem;left:2.5rem;outline:none;padding:1rem;position:absolute;width:80%}.chat-container[data-v-1deea1f8]{background-color:#fff;box-sizing:border-box;height:calc(95vh - 9.5rem);overflow-y:auto;padding:10px}.message[data-v-1deea1f8]{margin-bottom:8px}.message.own[data-v-1deea1f8]{text-align:right}.message.own .content[data-v-1deea1f8]{background-color:#ffc890}.chat-container .username[data-v-1deea1f8]{font-size:18px;font-weight:700}.chat-container .content[data-v-1deea1f8]{word-wrap:break-word;background-color:#87cefa;border-radius:10px;box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);display:inline-block;max-width:50%;padding:8px}@media (max-width:480px){.chat-container .content[data-v-1deea1f8]{max-width:60%}}@media screen and (max-width:576px){.chat-container[data-v-1deea1f8]{height:calc(95vh - 6.8rem)}}[data-v-1deea1f8]::-webkit-file-upload-button{cursor:pointer}input[type=file][data-v-1deea1f8]{cursor:pointer;height:100%;left:0;opacity:0;position:absolute;top:0;width:100%}.preview[data-v-1deea1f8]{height:100%;max-width:90%}.paperclip-button[data-v-1deea1f8]{background:transparent;height:100%;max-height:45px;max-width:45px;overflow:hidden;position:relative;width:100%}.paperclip-button[data-v-1deea1f8],.paperclip-button[data-v-1deea1f8]:hover{border-color:#f08b23!important;color:#f08b23}.paperclip-button[data-v-1deea1f8]:active,.paperclip-button[data-v-1deea1f8]:focus{background:#f08b23!important;color:#fff!important}.paperclip-button[data-v-1deea1f8]:focus{outline:none!important}.audio-button[data-v-1deea1f8]{background-color:#f08b23;height:100%;max-height:45px;max-width:45px;width:100%}.audio-button[data-v-1deea1f8]:hover{background-color:#f08b23!important}","",{version:3,sources:["webpack://./resources/js/desktop/pages/Chat.vue"],names:[],mappings:"AAw1BA,qCAEA,qBAAA,CACA,oBAAA,CAEA,2CAAA,CAJA,aAAA,CAGA,SAEA,CACA,+BACA,eAAA,CAEA,eAAA,CACA,sBAAA,CAFA,kBAGA,CACA,yBACA,4BAAA,CACA,8BACA,CACA,6BAEA,+BAAA,CADA,eAGA,CACA,wBAGA,kBAAA,CAIA,qBAAA,CAEA,wBAAA,CACA,iBAAA,CANA,QAAA,CAHA,qBAAA,CACA,YAAA,CAGA,aAAA,CACA,UAKA,CACA,yCAKA,4BAAA,CACA,WAAA,CAEA,iBAAA,CANA,WAAA,CAKA,YAAA,CAJA,YAAA,CAFA,iBAAA,CAGA,SAKA,CAYA,iCAMA,qBAAA,CALA,qBAAA,CACA,0BAAA,CACA,eAAA,CACA,YAGA,CACA,0BACA,iBACA,CACA,8BACA,gBACA,CACA,uCACA,wBACA,CACA,2CACA,cAAA,CACA,eACA,CACA,0CAQA,oBAAA,CALA,wBAAA,CACA,kBAAA,CAEA,gGAAA,CADA,oBAAA,CAEA,aAAA,CANA,WAQA,CACA,yBACA,0CACA,aACA,CACA,CACA,oCACA,iCACA,0BACA,CACA,CACA,8CACA,cACA,CACA,kCAUA,cAAA,CAFA,WAAA,CAIA,MAAA,CANA,SAAA,CAGA,iBAAA,CAEA,KAAA,CAJA,UAMA,CACA,0BACA,WAAA,CACA,aACA,CACA,mCAMA,sBAAA,CADA,WAAA,CAFA,eAAA,CADA,cAAA,CAOA,eAAA,CARA,iBAAA,CAGA,UAMA,CACA,4EAHA,8BAAA,CADA,aAOA,CAKA,mFAHA,4BAAA,CACA,oBAMA,CAJA,yCAGA,sBACA,CACA,+BAKA,wBAAA,CAFA,WAAA,CADA,eAAA,CADA,cAAA,CAGA,UAEA,CACA,qCACA,kCACA",sourcesContent:['<template>\n    <div class="container-fluid" style="padding: 0;">\n        <b-modal id="new-chat" title="Создать чат">\n            <div class="row w-100 mt-2 mx-auto">\n                <multiselect\n                    v-model="new_chat.user"\n                    placeholder="Начать чат с..."\n                    :optionHeight=29\n                    :showLabels=false\n                    :options="available_users"\n                    style="line-height: 1.5; font-size: 0.765625rem; margin:auto;"\n                    :multiple="false"\n                    label="info.FullName"\n                    track-by="id"\n                    :taggable="true"\n                    :searchable="true"\n                    :hideSelected="true"\n                >\n                    <template slot="singleLabel" slot-scope="props">\n                        <span class="option__title">{{ props.option.info.FullName }}</span>\n                    </template>\n                    <template slot="option" slot-scope="props">\n                        <span class="option__title">{{ props.option.info.FullName }}</span>\n                    </template>\n                </multiselect>\n            </div>\n            <template v-slot:modal-footer>\n                <div class="w-100">\n                    <b-button\n                        style="background: linear-gradient(0deg, #ffbf00 0%, #f08b23 100%); background-color: rgba(0, 0, 0, 0); background-color: #f08b23 !important; border-color: #f08b23 !important;"\n                        class="float-right"\n                        @click="createChat"\n                        :disabled="new_chat.user==null ||new_chat.user==\'\'||loading"\n                    >\n                        <b-spinner small v-if="loading"></b-spinner>\n                        <span class="sr-only" v-if="loading">Loading...</span>\n                        Создать\n                    </b-button>\n                    <b-button\n                        style="background: linear-gradient(0deg, #ffbf00 0%, #f08b23 100%); background-color: rgba(0, 0, 0, 0); background-color: #f08b23 !important; border-color: #f08b23 !important;"\n                        class="float-right mr-2"\n                        @click="cancel"\n                    >\n                        Отмена\n                    </b-button>\n                </div>\n            </template>\n        </b-modal>\n        <div class="row w-100 m-auto align-items-start justify-content-center">\n            <div class="col-sm-4 desktop scrollable" style="position: relative">\n                <div class="row w-100 m-auto">\n                    <div class="col-12 pt-3 px-0">\n                        <div class="row w-100 mx-auto" style="position: sticky; z-index:3; top: 0px">\n                            <div class="col-12 p-0">\n                                <div class="row w-100 m-auto justify-content-center align-items-center py-2" style="background: #f08b23; color: white; border-radius: 5px">\n                                    <div class="col-6 col-sm-6">\n                                        <p class="my-auto">\n                                            <span class="chat-name">Чаты</span>\n                                        </p>\n                                    </div>\n                                    <div class="col-6 col-sm-6">\n                                <span class="chat-name ml-auto mr-0" style="font-size: 25px; float:right" v-if="available_users.length>0 && user.role != \'client\'" @click="open" >\n                                        <b-icon icon="plus-circle-fill"></b-icon>\n                                </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="col-12 p-0">\n                                <div class="row w-100 mx-auto mt-2">\n                                    <b-form-input\n                                        v-model="search"\n                                        :placeholder="\'Поиск чата\'"\n                                        class="mb-0 travel-input"\n                                        @input="runSearch"\n                                    >\n                                    </b-form-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-if="chats.length<=0&&load==false">\n                        <div class="row w-100 m-auto">\n                            <div class="col-12 skeleton-tr pt-2 px-0" v-for="n in 5" :key="n">\n                                <div class="list-group">\n                                    <div class="list-group-item list-group-item-action flex-column align-items-start">\n                                        <div class="d-flex w-100 justify-content-between">\n                                            <div class="row m-auto w-100">\n                                                <div class="col-8 skeleton-tr p-2 mr-auto">\n                                                    <tb-skeleton :height="15" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                                <div class="col-2 skeleton-tr p-2 ml-auto float-right">\n                                                    <tb-skeleton :height="15" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div class="row m-auto w-100">\n                                                <div class="col-4 skeleton-tr p-2">\n                                                    <tb-skeleton :height="10" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                            <div class="row m-auto w-100">\n                                                <div class="col-2 skeleton-tr p-2">\n                                                    <tb-skeleton :height="5" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-if="chats.length<=0&&load==true">\n                        <div class="row w-100 mx-auto mb-2">\n                            <p>Пока у Вас нет никаких чатов</p>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-for="chat in filteredChats" :key="chat.id">\n                        <div class="list-group">\n                            <div class="list-group-item list-group-item-action flex-column align-items-start" style="cursor: pointer" :class="{active: chat.id == $route.params.id}" @click="toChat(chat.id)">\n                                <div class="d-flex w-100 justify-content-between">\n                                    <h5 class="mb-1" v-if="chat.creator_id == user.id">{{chat.manager_title}}</h5>\n                                    <h5 class="mb-1" v-else>{{chat.client_title}}</h5>\n                                    <small v-if="chat.messages.length>0">{{chat.messages[chat.messages.length-1].created_at | moment("from", "now") }}</small>\n                                </div>\n                                <div v-if="chat.messages.length>0">\n                                    <p class="mb-1 last_message">{{chat.messages[chat.messages.length-1].message_text}}</p>\n                                    <small>{{chat.messages[chat.messages.length-1].senderInfo.FirstName}}\n                                        <span v-if="chat.messages[chat.messages.length-1].senderInfo.MiddleName !=\'\' || chat.messages[chat.messages.length-1].senderInfo.MiddleName != null">\n                                            {{chat.messages[chat.messages.length-1].senderInfo.MiddleName}}\n                                        </span>\n                                    </small>\n                                </div>\n                                <div v-else>\n                                    <p class="mb-1 last_message">В этой беседе ещё нет сообщений</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-12 col-md-8" style="position: relative;">\n                <div class="chat-container" v-on:scroll="onScroll" ref="chatContainer">\n                    \x3c!--                    <infinite-loading direction="top" @infinite="infiniteHandler" spinner="waveDots">--\x3e\n                    \x3c!--                        <span slot="no-results">--\x3e\n                    \x3c!--                        </span>--\x3e\n                    \x3c!--                        <span slot="no-more">--\x3e\n                    \x3c!--                        </span>--\x3e\n                    \x3c!--                    </infinite-loading>--\x3e\n                    <message :messages="chatMessages"></message>\n                </div>\n                <div class="typer" v-if="message_mode==\'text\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading">\n                        <input type="file" id="file" ref="file" v-on:change="handleFile()"/>\n                        <b-icon icon="paperclip" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <b-form-textarea\n                        id="textarea"\n                        class="mx-1"\n                        v-model="message_text"\n                        size="sm"\n                        placeholder="Напишите сообщение..."\n                        rows="1"\n                        max-rows="2"\n                        no-resize\n                        @keydown.enter.exact.prevent="sendChatMessage(\'text\')"\n                    >\n                    </b-form-textarea>\n                    <vue-record-audio v-if="message_text.trim()==\'\'&&message_mode==\'text\'" :mode="\'press\'" @stream="onStream" @result="onResult" class="audio-button mx-1"/>\n                    <b-button v-else class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'text\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer" v-if="message_mode==\'image\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <div class="row m-auto p-2 w-100 h-100 align-items-center justify-content-center">\n                        <div class="col-4 h-100 text-center">\n                            <img class="preview" :src="preview"/>\n                        </div>\n                        <div class="col-8 p-0 p-sm-1 p-md-2 h-100">\n                            <div style="text-overflow: ellipsis;overflow: hidden;width: 100%;height: 100%;">{{image_record.name}}</div>\n                        </div>\n                    </div>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'image\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer" v-if="message_mode==\'file\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <div class="row m-auto p-2 w-100 h-100 align-items-center justify-content-center">\n                        <div class="col-4 h-100 text-center">\n                            <img class="preview" :src="preview"/>\n                        </div>\n                        <div class="col-8 p-0 p-sm-1 p-md-2 h-100">\n                            <div style="text-overflow: ellipsis;overflow: hidden;width: 100%;height: 100%;">{{file_record.name}}</div>\n                        </div>\n                    </div>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'file\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer justify-content-between" v-if="message_mode==\'audio\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <audio-player :audio="audio_record" :type="\'file\'" style="width:60%"></audio-player>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'audio\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data () {\n            return {\n                message_text: \'\',\n                audio_record: null,\n                image_record: null,\n                file_record: null,\n                message_mode:\'text\',\n                preview:\'\',\n                message_loading:false,\n                flag:false,\n                seconds:0,\n                interval:\'\',\n                files: [],\n                currentChat: {},\n                chatMessages: [],\n                emojiPanel: false,\n                currentRef: {},\n                loading: false,\n                totalChatHeight: 0,\n                search:\'\',\n                results:[],\n                options: {\n                    // minMatchCharLength: 2,\n                    shouldSort: true,\n                    threshold: 0.2,\n                    keys: [\'manager_title\', \'client_title\']\n                },\n                new_chat:{\n                    name:\'\',\n                    user:null\n                },\n                load:false,\n            }\n        },\n        mounted () {\n            this.chatMessages=[]\n            // this.$store.dispatch(\'loadUserChats\').then(()=>{\n            //     this.loadChat()\n            // })\n            this.loadChat()\n            this.getUser()\n            console.log(\'this.chatMessages\', this.chatMessages)\n            console.log(\'this.currentChat\', this.currentChat)\n        },\n        computed: {\n            messages () {\n                return this.chatMessages\n            },\n            chats () {\n                return this.$store.getters.chats\n            },\n            user() {\n                return this.$store.getters.user\n            },\n            available_users() {\n                return this.$store.getters.available_users\n            },\n            filteredChats() {\n                if(this.search.trim() === \'\')\n                {\n                    return this.chats\n                }\n                else {\n                    return this.results\n                }\n            }\n            // onNewMessageAdded () {\n            //     const that = this\n            //     let onNewMessageAdded = function (snapshot, newMessage = true) {\n            //         let message = {};\n            //         /*eslint-disable */\n            //         var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\n            //         /*eslint-enable */\n            //         message.message_text = message.message_text\n            //             .replace(/&/g, \'&amp;\')\n            //             .replace(/</g, \'&lt;\')\n            //             .replace(/>/g, \'&gt;\')\n            //             .replace(/"/g, \'&quot;\')\n            //             .replace(/\'/g, \'&#039;\')\n            //         message.message_text = message.message_text.replace(urlPattern, "<a href=\'$1\'>$1</a>")\n            //         if (!newMessage) {\n            //             // that.chatMessages.unshift(that.processMessage(message))\n            //             that.chatMessages.unshift(message)\n            //             that.scrollTo()\n            //         } else {\n            //             that.chatMessages.push(message)\n            //             that.scrollToEnd()\n            //         }\n            //     }\n            //     return onNewMessageAdded\n            // }\n        },\n        watch: {\n            \'$route.params.id\' (newId, oldId) {\n                // this.currentRef.off(\'child_added\', this.onNewMessageAdded)\n                console.log(\'here wattch\')\n                this.loadChat()\n            }\n        },\n        methods: {\n            toChat(id)\n            {\n                this.$router.push(\'/\'+this.user.role+\'/chat/\'+id)\n            },\n            async getUser() {\n                if (!this.user) {\n                    await this.$store.dispatch(\'getUser\').then( () => {\n                    })\n                }\n            },\n            async loadChat () {\n                if(this.chats.length<=0){\n\n                    await this.$store.dispatch(\'loadUserChats\').then(()=>{\n                        this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                        this.loading = false\n                        this.load=true\n                        if (this.$route.params.id !== undefined) {\n                            this.chatMessages = []\n                            this.currentChat = this.chats.find((chat) => {if(chat.id == this.$route.params.id)\n                            {\n                                return true;\n                            }});\n                            // this.chatMessages = this.currentChat.messages;\n                            this.currentChat.messages.forEach((item) => {\n                                this.onNewMessageAdded(item, false);\n                            })\n                            // let chatID = this.id\n                            // this.currentRef = firebase.database().ref(\'messages\').child(chatID).child(\'messages\').limitToLast(20)\n                            // this.currentRef.on(\'child_added\', this.onNewMessageAdded)\n                        }\n                    })\n                }\n                else{\n                    this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                    this.loading = false\n                    if (this.$route.params.id !== undefined) {\n                        this.chatMessages = []\n                        this.currentChat = this.chats.find((chat) => {if(chat.id == this.$route.params.id)\n                        {\n                            return true;\n                        }});\n                        this.currentChat.messages.forEach((item) => {\n                            this.onNewMessageAdded(item, false);\n                        })\n                    }\n                }\n\n            },\n            onScroll () {\n                let scrollValue = this.$refs.chatContainer.scrollTop\n                const that = this\n                if (scrollValue < 100 && !this.loading) {\n                    this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                    this.loading = true\n                    // let chatID = this.id\n                    let currentTopMessage = this.chatMessages[0]\n                    if (currentTopMessage === undefined) {\n                        this.loading = false\n                        return\n                    }\n                    // firebase.database().ref(\'messages\').child(chatID).child(\'messages\').orderByKey().endAt(currentTopMessage.key).limitToLast(20).once(\'value\').then(\n                    //     function (snapshot) {\n                    //         let tempArray = []\n                    //         snapshot.forEach(function (item) {\n                    //             tempArray.push(item)\n                    //         })\n                    //         if (tempArray[0].key === tempArray[1].key) return\n                    //         tempArray.reverse()\n                    //         tempArray.forEach(function (child) { that.onNewMessageAdded(child, false) })\n                    that.loading = false\n                    //     }\n                    // )\n                }\n            },\n            processMessage (message) {\n                /*eslint-disable */\n                var imageRegex = /([^\\s\\\']+).(?:jpg|jpeg|gif|png)/i\n                /*eslint-enable */\n                if (imageRegex.test(message.message_text)) {\n                    message.image = imageRegex.exec(message.message_text)[0]\n                }\n                var emojiRegex = /([\\u{1f300}-\\u{1f5ff}\\u{1f900}-\\u{1f9ff}\\u{1f600}-\\u{1f64f}\\u{1f680}-\\u{1f6ff}\\u{2600}-\\u{26ff}\\u{2700}-\\u{27bf}\\u{1f1e6}-\\u{1f1ff}\\u{1f191}-\\u{1f251}\\u{2934}-\\u{1f18e}])/gu\n                if (emojiRegex.test(message.message_text)) {\n                    message.message_text = message.message_text.replace(emojiRegex, \'<span class="emoji">$1</span>\')\n                }\n                return message\n            },\n            onNewMessageAdded (message, newMessage = true) {\n                /*eslint-disable */\n                var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\n                /*eslint-enable */\n                message.message_text = message.message_text\n                    .replace(/&/g, \'&amp;\')\n                    .replace(/</g, \'&lt;\')\n                    .replace(/>/g, \'&gt;\')\n                    .replace(/"/g, \'&quot;\')\n                    .replace(/\'/g, \'&#039;\')\n                message.message_text = message.message_text.replace(urlPattern, "<a href=\'$1\'>$1</a>")\n                if (!newMessage) {\n                    // that.chatMessages.unshift(that.processMessage(message))\n                    // this.chatMessages.unshift(message)\n                    this.chatMessages.push(message)\n                    console.log(\'!newMessage\')\n                    this.scrollTo()\n                } else {\n                    this.chatMessages.push(message)\n                    console.log(\'newMessage\')\n                    this.scrollToEnd()\n                }\n\n            },\n            async sendChatMessage (type) {\n                this.message_loading = true;\n                // if (this.message_text !== \'\') {\n                if(this.audio_record!=null){\n                    this.files.push(this.audio_record)\n                }\n                if(this.image_record!=null){\n                    this.files.push(this.image_record)\n                }\n                if(this.file_record!=null){\n                    this.files.push(this.file_record)\n                }\n                var message = {\n                    message_text: this.message_text,\n                    date: new Date().toString(),\n                    conversation_id: this.currentChat.id,\n                    sender_id: this.user.id,\n                    type: type,\n                    files: this.files,\n                    senderInfo: this.user.info,\n                    selfMessage: true\n                }\n                let formData = new FormData();\n                formData.append("message", JSON.stringify(message));\n\n                for (var i = 0; i < this.files.length; i++) {\n                    let file = this.files[i].data;\n\n                    formData.append(\'files[\' + i + \']\', file);\n                }\n                await this.$store.dispatch(\'sendMessage\', formData).then(resp=>{\n                    this.onNewMessageAdded(resp.data.message, true);\n                    this.$store.commit(\'addChatMessage\', resp.data.message);\n                    this.message_loading = false;\n                });\n                this.clearMessage();\n                // }\n            },\n            scrollToEnd () {\n                this.$nextTick(() => {\n                    var container = this.$el.querySelector(\'.chat-container\')\n                    container.scrollTop = container.scrollHeight\n                })\n            },\n            scrollTo () {\n                this.$nextTick(() => {\n                    let currentHeight = this.$refs.chatContainer.scrollHeight\n                    let difference = currentHeight - this.totalChatHeight\n                    var container = this.$el.querySelector(\'.chat-container\')\n                    container.scrollTop = difference\n                })\n            },\n            addEmojiToMessage (emoji) {\n                this.message_text += emoji.value\n            },\n            toggleEmojiPanel () {\n                this.emojiPanel = !this.emojiPanel\n            },\n            onStream(stream) {\n                console.log(\'before countSeconds\')\n                this.countSeconds();\n                console.log(\'after countSeconds\')\n                console.log(\'Got a stream object:\', stream);\n                console.log(\'after stream object\')\n\n            },\n            onResult(data) {\n                var time = Date.now();\n                var date = new Date();\n                // this.files.push({\n                //     type: \'audio\',\n                //     name: \'record-\'+time+\'.mp3\',\n                //     src: window.URL.createObjectURL(data),\n                //     data: data,\n                //     date: date,\n                // })\n                this.audio_record = {\n                    type: \'audio\',\n                    name: \'record-\'+time+\'.mp3\',\n                    src: window.URL.createObjectURL(data),\n                    data: data,\n                    date: date,\n                    seconds: this.seconds\n                }\n                this.countSeconds();\n                this.message_mode=\'audio\';\n\n            },\n            handleFile() {\n                var time = Date.now();\n                var date = new Date();\n                let uploadedFile = this.$refs.file.files;\n                if (/\\.(jpe?g|png|svg)$/i.test(uploadedFile[0].name))\n                {\n                    let reader = new FileReader();\n                    reader.addEventListener("load", function() {\n                        this.preview = reader.result;\n                    }.bind(this), false);\n                    reader.readAsDataURL(uploadedFile[0]);\n                    // this.image_record = uploadedFile[0];\n                    this.image_record = {\n                        type: \'image\',\n                        name: uploadedFile[0].name,\n                        data: uploadedFile[0],\n                        date: date,\n                    }\n                    this.message_mode = \'image\';\n                }\n                else if(/\\.(pdf|txt|docx|doc)$/i.test(uploadedFile[0].name))\n                {\n                    // let reader = new FileReader();\n                    // reader.addEventListener("load", function() {\n                    //     this.preview = reader.result;\n                    // }.bind(this), false);\n                    // reader.readAsDataURL(uploadedFile[0]);\n                    // this.file_record = uploadedFile[0];\n                    this.file_record = {\n                        type: \'file\',\n                        name: uploadedFile[0].name,\n                        data: uploadedFile[0],\n                        date: date,\n                    }\n                    this.message_mode = \'file\';\n                    this.$nextTick(function() {\n                        this.preview = \'/images/LOGO-1.png\';\n                    });\n                }\n                else\n                {\n                    // this.$nextTick(function() {\n                    //     this.preview = \'/images/LOGO-1.png\';\n                    // });\n                    this.sendMessage(\'Неверный формат файла\')\n                    this.clearMessage();\n                }\n            },\n            clearMessage() {\n                this.message_text=\'\';\n                this.image_record=null;\n                this.audio_record=null;\n                this.file_record=null;\n                this.message_mode=\'text\'\n            },\n            countSeconds() {\n                console.log(\'this.flag 1\', this.flag )\n                this.flag = !this.flag\n                console.log(\'this.flag \', this.flag )\n                if (this.flag == true) {\n                    this.seconds=0;\n                    this.interval = setInterval(this.incrementSeconds, 1000);\n                }\n                else {\n                    clearInterval(this.interval)\n                    this.audio_record.seconds = this.seconds\n                }\n            },\n            incrementSeconds() {\n                this.seconds += 1;\n            },\n            runSearch () {\n                if(this.search.trim() === \'\')\n                {\n                    this.results = this.chats\n                }\n                else {\n                    // if(this.search.length > 2){\n                    //     this.options.minMatchCharLength=this.search.length\n                    // }\n                    this.$search(this.search, this.chats, this.options).then(result => {\n                        this.results = []\n                        result.forEach(item=>{\n                            this.results.push(item)\n                        })\n                    })\n                }\n                console.log(this.results)\n            },\n            open(){\n                this.$bvModal.show("new-chat");\n            },\n            cancel(){\n                this.$bvModal.hide("new-chat");\n            },\n            async createChat() {\n                this.loading = true;\n                var payload = {\n                    user_id: this.new_chat.user.id,\n                    name: this.new_chat.user.info.FullName\n                }\n                await this.$store.dispatch(\'createChat\', payload).then( resp => {\n                    this.$store.commit(\'addChat\', resp.data.chat)\n                    this.$store.commit(\'removeAvailableUser\', this.new_chat.user.id)\n                    this.loading=false;\n                    this.new_chat = {\n                        name:\'\',\n                        user:null\n                    };\n                    this.cancel();\n                })\n            },\n            sendMessage(message) {\n                this.$notify({\n                    group: \'info\',\n                    type: \'travel\',\n                    title: \'Сообщение от TravelClub\',\n                    text: message\n                });\n            },\n        }\n    }\n<\/script>\n\n<style scoped>\n    .form-control:focus {\n        color: #495057;\n        background-color: #fff;\n        border-color: #f08b23;\n        outline: 0;\n        box-shadow: 0 0 0 0.2rem rgba(240, 139, 35, 0.25);\n    }\n    .last_message{\n        max-height: 50px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    .active {\n        background: #f08b23 !important;\n        border-color: #f08b23 !important;\n    }\n    .scrollable {\n        overflow-y: auto;\n        max-height:calc(100vh - 6.9rem);\n        /*max-height:70vh;*/\n    }\n    .typer{\n        box-sizing: border-box;\n        display: flex;\n        align-items: center;\n        bottom: 0;\n        height: 4.9rem;\n        width: 100%;\n        background-color: #fff;\n        /*box-shadow: 0 -5px 10px -5px rgba(0,0,0,.2);*/\n        border: 2px solid #f08b23;\n        border-radius: 5px;\n    }\n    .typer input[type=text]{\n        position: absolute;\n        left: 2.5rem;\n        padding: 1rem;\n        width: 80%;\n        background-color: transparent;\n        border: none;\n        outline: none;\n        font-size: 1.25rem;\n    }\n    /*.typer button {*/\n    /*    color: #fff;*/\n    /*    background-color: #f8a105;*/\n    /*    border-color: #f8a105;*/\n    /*    outline: none !important;*/\n    /*}*/\n    /*.typer button:hover{*/\n    /*    color: #fff;*/\n    /*    background-color: #063065;*/\n    /*    border-color: #063065;*/\n    /*}*/\n    .chat-container{\n        box-sizing: border-box;\n        height: calc(95vh - 9.5rem);\n        overflow-y: auto;\n        padding: 10px;\n        /*background-color: #f2f2f2;*/\n        background-color: #fff;\n    }\n    .message{\n        margin-bottom: 8px;\n    }\n    .message.own{\n        text-align: right;\n    }\n    .message.own .content{\n        background-color: #ffc890;\n    }\n    .chat-container .username{\n        font-size: 18px;\n        font-weight: bold;\n    }\n    .chat-container .content{\n        padding: 8px;\n        /*background-color: lightgreen;*/\n        background-color: lightskyblue;\n        border-radius: 10px;\n        display:inline-block;\n        box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2), 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12);\n        max-width: 50%;\n        word-wrap: break-word;\n    }\n    @media (max-width: 480px) {\n        .chat-container .content{\n            max-width: 60%;\n        }\n    }\n    @media screen and (max-width: 576px) {\n        .chat-container {\n            height: calc(95vh - 6.8rem);\n        }\n    }\n    ::-webkit-file-upload-button {\n        cursor:pointer;\n    }\n    input[type="file"]{\n        /*opacity: 0;*/\n        /*width: 100%;*/\n        /*height: 70px;*/\n        /*position: absolute;*/\n        /*cursor: pointer;*/\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n    }\n    .preview{\n        height: 100%;\n        max-width: 90%;\n    }\n    .paperclip-button {\n        position: relative;\n        max-width: 45px;\n        max-height: 45px;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        color: #f08b23;\n        border-color: #f08b23 !important;\n        overflow: hidden;\n    }\n    .paperclip-button:hover {\n        color: #f08b23;\n        border-color: #f08b23 !important;\n    }\n    .paperclip-button:active {\n        background: #f08b23 !important;\n        color: #fff !important;\n    }\n    .paperclip-button:focus {\n        background: #f08b23 !important;\n        color: #fff !important;\n        outline: none !important;\n    }\n    .audio-button {\n        max-width: 45px;\n        max-height: 45px;\n        height: 100%;\n        width: 100%;\n        background-color: #f08b23;\n    }\n    .audio-button:hover {\n        background-color: #f08b23 !important;\n    }\n</style>\n<style>\n    .loading-wave-dots .wave-item:nth-child(2) {\n        margin-left: -20px;\n        -webkit-animation-delay: .14s !important;\n        animation-delay: .14s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(3) {\n        margin-left: -4px;\n        -webkit-animation-delay: .28s !important;\n        animation-delay: .28s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(4) {\n        margin-left: 12px;\n        -webkit-animation-delay: .42s !important;\n        animation-delay: .42s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:last-child {\n        margin-left: 28px;\n        -webkit-animation-delay: .56s !important;\n        animation-delay: .56s !important;\n    }\n    .loading-wave-dots .wave-item {\n        -webkit-animation: wave-dots linear 2.8s infinite !important;\n        animation: wave-dots linear 2.8s infinite !important;\n    }\n    @keyframes wave-dots {\n        0% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #5b43f3;\n        }\n        10% {\n            -webkit-transform: translateY(-6px);\n            transform: translateY(-6px);\n            background: #5b43f3;\n        }\n        20% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #f3434b;\n        }\n        100% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #5b43f3;\n        }\n    }\n\n</style>\n'],sourceRoot:""}]);const r=o},90062:(e,t,n)=>{n.d(t,{A:()=>r});var s=n(45627),a=n.n(s),i=n(76798),o=n.n(i)()(a());o.push([e.id,".loading-wave-dots .wave-item:nth-child(2){animation-delay:.14s!important;margin-left:-20px}.loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(3){animation-delay:.28s!important;margin-left:-4px}.loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(4){animation-delay:.42s!important;margin-left:12px}.loading-wave-dots[data-v-46b20d22] .wave-item:last-child{animation-delay:.56s!important;margin-left:28px}.loading-wave-dots .wave-item{animation:wave-dots 2.8s linear infinite!important}@keyframes wave-dots{0%{background:#5b43f3;transform:translateY(0)}10%{background:#5b43f3;transform:translateY(-6px)}20%{background:#f3434b;transform:translateY(0)}to{background:#5b43f3;transform:translateY(0)}}","",{version:3,sources:["webpack://./resources/js/desktop/pages/Chat.vue"],names:[],mappings:"AAw1BA,2CAGA,8BAAA,CAFA,iBAGA,CACA,4DAGA,8BAAA,CAFA,gBAGA,CACA,4DAGA,8BAAA,CAFA,gBAGA,CACA,0DAGA,8BAAA,CAFA,gBAGA,CACA,8BAEA,kDACA,CACA,qBACA,GAGA,kBAAA,CADA,uBAEA,CACA,IAGA,kBAAA,CADA,0BAEA,CACA,IAGA,kBAAA,CADA,uBAEA,CACA,GAGA,kBAAA,CADA,uBAEA,CACA",sourcesContent:['<template>\n    <div class="container-fluid" style="padding: 0;">\n        <b-modal id="new-chat" title="Создать чат">\n            <div class="row w-100 mt-2 mx-auto">\n                <multiselect\n                    v-model="new_chat.user"\n                    placeholder="Начать чат с..."\n                    :optionHeight=29\n                    :showLabels=false\n                    :options="available_users"\n                    style="line-height: 1.5; font-size: 0.765625rem; margin:auto;"\n                    :multiple="false"\n                    label="info.FullName"\n                    track-by="id"\n                    :taggable="true"\n                    :searchable="true"\n                    :hideSelected="true"\n                >\n                    <template slot="singleLabel" slot-scope="props">\n                        <span class="option__title">{{ props.option.info.FullName }}</span>\n                    </template>\n                    <template slot="option" slot-scope="props">\n                        <span class="option__title">{{ props.option.info.FullName }}</span>\n                    </template>\n                </multiselect>\n            </div>\n            <template v-slot:modal-footer>\n                <div class="w-100">\n                    <b-button\n                        style="background: linear-gradient(0deg, #ffbf00 0%, #f08b23 100%); background-color: rgba(0, 0, 0, 0); background-color: #f08b23 !important; border-color: #f08b23 !important;"\n                        class="float-right"\n                        @click="createChat"\n                        :disabled="new_chat.user==null ||new_chat.user==\'\'||loading"\n                    >\n                        <b-spinner small v-if="loading"></b-spinner>\n                        <span class="sr-only" v-if="loading">Loading...</span>\n                        Создать\n                    </b-button>\n                    <b-button\n                        style="background: linear-gradient(0deg, #ffbf00 0%, #f08b23 100%); background-color: rgba(0, 0, 0, 0); background-color: #f08b23 !important; border-color: #f08b23 !important;"\n                        class="float-right mr-2"\n                        @click="cancel"\n                    >\n                        Отмена\n                    </b-button>\n                </div>\n            </template>\n        </b-modal>\n        <div class="row w-100 m-auto align-items-start justify-content-center">\n            <div class="col-sm-4 desktop scrollable" style="position: relative">\n                <div class="row w-100 m-auto">\n                    <div class="col-12 pt-3 px-0">\n                        <div class="row w-100 mx-auto" style="position: sticky; z-index:3; top: 0px">\n                            <div class="col-12 p-0">\n                                <div class="row w-100 m-auto justify-content-center align-items-center py-2" style="background: #f08b23; color: white; border-radius: 5px">\n                                    <div class="col-6 col-sm-6">\n                                        <p class="my-auto">\n                                            <span class="chat-name">Чаты</span>\n                                        </p>\n                                    </div>\n                                    <div class="col-6 col-sm-6">\n                                <span class="chat-name ml-auto mr-0" style="font-size: 25px; float:right" v-if="available_users.length>0 && user.role != \'client\'" @click="open" >\n                                        <b-icon icon="plus-circle-fill"></b-icon>\n                                </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="col-12 p-0">\n                                <div class="row w-100 mx-auto mt-2">\n                                    <b-form-input\n                                        v-model="search"\n                                        :placeholder="\'Поиск чата\'"\n                                        class="mb-0 travel-input"\n                                        @input="runSearch"\n                                    >\n                                    </b-form-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-if="chats.length<=0&&load==false">\n                        <div class="row w-100 m-auto">\n                            <div class="col-12 skeleton-tr pt-2 px-0" v-for="n in 5" :key="n">\n                                <div class="list-group">\n                                    <div class="list-group-item list-group-item-action flex-column align-items-start">\n                                        <div class="d-flex w-100 justify-content-between">\n                                            <div class="row m-auto w-100">\n                                                <div class="col-8 skeleton-tr p-2 mr-auto">\n                                                    <tb-skeleton :height="15" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                                <div class="col-2 skeleton-tr p-2 ml-auto float-right">\n                                                    <tb-skeleton :height="15" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div class="row m-auto w-100">\n                                                <div class="col-4 skeleton-tr p-2">\n                                                    <tb-skeleton :height="10" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                            <div class="row m-auto w-100">\n                                                <div class="col-2 skeleton-tr p-2">\n                                                    <tb-skeleton :height="5" theme="opacity" bg-color="#dcdbdc" shape="radius" />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-if="chats.length<=0&&load==true">\n                        <div class="row w-100 mx-auto mb-2">\n                            <p>Пока у Вас нет никаких чатов</p>\n                        </div>\n                    </div>\n                    <div class="col-12 pt-2 px-0" v-for="chat in filteredChats" :key="chat.id">\n                        <div class="list-group">\n                            <div class="list-group-item list-group-item-action flex-column align-items-start" style="cursor: pointer" :class="{active: chat.id == $route.params.id}" @click="toChat(chat.id)">\n                                <div class="d-flex w-100 justify-content-between">\n                                    <h5 class="mb-1" v-if="chat.creator_id == user.id">{{chat.manager_title}}</h5>\n                                    <h5 class="mb-1" v-else>{{chat.client_title}}</h5>\n                                    <small v-if="chat.messages.length>0">{{chat.messages[chat.messages.length-1].created_at | moment("from", "now") }}</small>\n                                </div>\n                                <div v-if="chat.messages.length>0">\n                                    <p class="mb-1 last_message">{{chat.messages[chat.messages.length-1].message_text}}</p>\n                                    <small>{{chat.messages[chat.messages.length-1].senderInfo.FirstName}}\n                                        <span v-if="chat.messages[chat.messages.length-1].senderInfo.MiddleName !=\'\' || chat.messages[chat.messages.length-1].senderInfo.MiddleName != null">\n                                            {{chat.messages[chat.messages.length-1].senderInfo.MiddleName}}\n                                        </span>\n                                    </small>\n                                </div>\n                                <div v-else>\n                                    <p class="mb-1 last_message">В этой беседе ещё нет сообщений</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="col-12 col-md-8" style="position: relative;">\n                <div class="chat-container" v-on:scroll="onScroll" ref="chatContainer">\n                    \x3c!--                    <infinite-loading direction="top" @infinite="infiniteHandler" spinner="waveDots">--\x3e\n                    \x3c!--                        <span slot="no-results">--\x3e\n                    \x3c!--                        </span>--\x3e\n                    \x3c!--                        <span slot="no-more">--\x3e\n                    \x3c!--                        </span>--\x3e\n                    \x3c!--                    </infinite-loading>--\x3e\n                    <message :messages="chatMessages"></message>\n                </div>\n                <div class="typer" v-if="message_mode==\'text\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading">\n                        <input type="file" id="file" ref="file" v-on:change="handleFile()"/>\n                        <b-icon icon="paperclip" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <b-form-textarea\n                        id="textarea"\n                        class="mx-1"\n                        v-model="message_text"\n                        size="sm"\n                        placeholder="Напишите сообщение..."\n                        rows="1"\n                        max-rows="2"\n                        no-resize\n                        @keydown.enter.exact.prevent="sendChatMessage(\'text\')"\n                    >\n                    </b-form-textarea>\n                    <vue-record-audio v-if="message_text.trim()==\'\'&&message_mode==\'text\'" :mode="\'press\'" @stream="onStream" @result="onResult" class="audio-button mx-1"/>\n                    <b-button v-else class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'text\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer" v-if="message_mode==\'image\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <div class="row m-auto p-2 w-100 h-100 align-items-center justify-content-center">\n                        <div class="col-4 h-100 text-center">\n                            <img class="preview" :src="preview"/>\n                        </div>\n                        <div class="col-8 p-0 p-sm-1 p-md-2 h-100">\n                            <div style="text-overflow: ellipsis;overflow: hidden;width: 100%;height: 100%;">{{image_record.name}}</div>\n                        </div>\n                    </div>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'image\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer" v-if="message_mode==\'file\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <div class="row m-auto p-2 w-100 h-100 align-items-center justify-content-center">\n                        <div class="col-4 h-100 text-center">\n                            <img class="preview" :src="preview"/>\n                        </div>\n                        <div class="col-8 p-0 p-sm-1 p-md-2 h-100">\n                            <div style="text-overflow: ellipsis;overflow: hidden;width: 100%;height: 100%;">{{file_record.name}}</div>\n                        </div>\n                    </div>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'file\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n                <div class="typer justify-content-between" v-if="message_mode==\'audio\'">\n                    <b-button class="rounded-circle border p-0 mx-1 paperclip-button" :disabled="message_loading" @click="clearMessage">\n                        <b-icon icon="x" scale="2" aria-hidden="true"></b-icon>\n                    </b-button>\n                    <audio-player :audio="audio_record" :type="\'file\'" style="width:60%"></audio-player>\n                    <b-button class="audio-button rounded-circle p-2 mx-1 text-white border-0" :disabled="message_loading" @click="sendChatMessage(\'audio\')">\n                        <i class="bi-blank icon-send b-icon bi m-0 w-auto h-auto" style="font-size: 25px;" v-if="!message_loading"></i>\n                        <b-spinner small v-if="message_loading"></b-spinner>\n                        <span class="sr-only" v-if="message_loading">Loading...</span>\n                    </b-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        data () {\n            return {\n                message_text: \'\',\n                audio_record: null,\n                image_record: null,\n                file_record: null,\n                message_mode:\'text\',\n                preview:\'\',\n                message_loading:false,\n                flag:false,\n                seconds:0,\n                interval:\'\',\n                files: [],\n                currentChat: {},\n                chatMessages: [],\n                emojiPanel: false,\n                currentRef: {},\n                loading: false,\n                totalChatHeight: 0,\n                search:\'\',\n                results:[],\n                options: {\n                    // minMatchCharLength: 2,\n                    shouldSort: true,\n                    threshold: 0.2,\n                    keys: [\'manager_title\', \'client_title\']\n                },\n                new_chat:{\n                    name:\'\',\n                    user:null\n                },\n                load:false,\n            }\n        },\n        mounted () {\n            this.chatMessages=[]\n            // this.$store.dispatch(\'loadUserChats\').then(()=>{\n            //     this.loadChat()\n            // })\n            this.loadChat()\n            this.getUser()\n            console.log(\'this.chatMessages\', this.chatMessages)\n            console.log(\'this.currentChat\', this.currentChat)\n        },\n        computed: {\n            messages () {\n                return this.chatMessages\n            },\n            chats () {\n                return this.$store.getters.chats\n            },\n            user() {\n                return this.$store.getters.user\n            },\n            available_users() {\n                return this.$store.getters.available_users\n            },\n            filteredChats() {\n                if(this.search.trim() === \'\')\n                {\n                    return this.chats\n                }\n                else {\n                    return this.results\n                }\n            }\n            // onNewMessageAdded () {\n            //     const that = this\n            //     let onNewMessageAdded = function (snapshot, newMessage = true) {\n            //         let message = {};\n            //         /*eslint-disable */\n            //         var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\n            //         /*eslint-enable */\n            //         message.message_text = message.message_text\n            //             .replace(/&/g, \'&amp;\')\n            //             .replace(/</g, \'&lt;\')\n            //             .replace(/>/g, \'&gt;\')\n            //             .replace(/"/g, \'&quot;\')\n            //             .replace(/\'/g, \'&#039;\')\n            //         message.message_text = message.message_text.replace(urlPattern, "<a href=\'$1\'>$1</a>")\n            //         if (!newMessage) {\n            //             // that.chatMessages.unshift(that.processMessage(message))\n            //             that.chatMessages.unshift(message)\n            //             that.scrollTo()\n            //         } else {\n            //             that.chatMessages.push(message)\n            //             that.scrollToEnd()\n            //         }\n            //     }\n            //     return onNewMessageAdded\n            // }\n        },\n        watch: {\n            \'$route.params.id\' (newId, oldId) {\n                // this.currentRef.off(\'child_added\', this.onNewMessageAdded)\n                console.log(\'here wattch\')\n                this.loadChat()\n            }\n        },\n        methods: {\n            toChat(id)\n            {\n                this.$router.push(\'/\'+this.user.role+\'/chat/\'+id)\n            },\n            async getUser() {\n                if (!this.user) {\n                    await this.$store.dispatch(\'getUser\').then( () => {\n                    })\n                }\n            },\n            async loadChat () {\n                if(this.chats.length<=0){\n\n                    await this.$store.dispatch(\'loadUserChats\').then(()=>{\n                        this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                        this.loading = false\n                        this.load=true\n                        if (this.$route.params.id !== undefined) {\n                            this.chatMessages = []\n                            this.currentChat = this.chats.find((chat) => {if(chat.id == this.$route.params.id)\n                            {\n                                return true;\n                            }});\n                            // this.chatMessages = this.currentChat.messages;\n                            this.currentChat.messages.forEach((item) => {\n                                this.onNewMessageAdded(item, false);\n                            })\n                            // let chatID = this.id\n                            // this.currentRef = firebase.database().ref(\'messages\').child(chatID).child(\'messages\').limitToLast(20)\n                            // this.currentRef.on(\'child_added\', this.onNewMessageAdded)\n                        }\n                    })\n                }\n                else{\n                    this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                    this.loading = false\n                    if (this.$route.params.id !== undefined) {\n                        this.chatMessages = []\n                        this.currentChat = this.chats.find((chat) => {if(chat.id == this.$route.params.id)\n                        {\n                            return true;\n                        }});\n                        this.currentChat.messages.forEach((item) => {\n                            this.onNewMessageAdded(item, false);\n                        })\n                    }\n                }\n\n            },\n            onScroll () {\n                let scrollValue = this.$refs.chatContainer.scrollTop\n                const that = this\n                if (scrollValue < 100 && !this.loading) {\n                    this.totalChatHeight = this.$refs.chatContainer.scrollHeight\n                    this.loading = true\n                    // let chatID = this.id\n                    let currentTopMessage = this.chatMessages[0]\n                    if (currentTopMessage === undefined) {\n                        this.loading = false\n                        return\n                    }\n                    // firebase.database().ref(\'messages\').child(chatID).child(\'messages\').orderByKey().endAt(currentTopMessage.key).limitToLast(20).once(\'value\').then(\n                    //     function (snapshot) {\n                    //         let tempArray = []\n                    //         snapshot.forEach(function (item) {\n                    //             tempArray.push(item)\n                    //         })\n                    //         if (tempArray[0].key === tempArray[1].key) return\n                    //         tempArray.reverse()\n                    //         tempArray.forEach(function (child) { that.onNewMessageAdded(child, false) })\n                    that.loading = false\n                    //     }\n                    // )\n                }\n            },\n            processMessage (message) {\n                /*eslint-disable */\n                var imageRegex = /([^\\s\\\']+).(?:jpg|jpeg|gif|png)/i\n                /*eslint-enable */\n                if (imageRegex.test(message.message_text)) {\n                    message.image = imageRegex.exec(message.message_text)[0]\n                }\n                var emojiRegex = /([\\u{1f300}-\\u{1f5ff}\\u{1f900}-\\u{1f9ff}\\u{1f600}-\\u{1f64f}\\u{1f680}-\\u{1f6ff}\\u{2600}-\\u{26ff}\\u{2700}-\\u{27bf}\\u{1f1e6}-\\u{1f1ff}\\u{1f191}-\\u{1f251}\\u{2934}-\\u{1f18e}])/gu\n                if (emojiRegex.test(message.message_text)) {\n                    message.message_text = message.message_text.replace(emojiRegex, \'<span class="emoji">$1</span>\')\n                }\n                return message\n            },\n            onNewMessageAdded (message, newMessage = true) {\n                /*eslint-disable */\n                var urlPattern = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig\n                /*eslint-enable */\n                message.message_text = message.message_text\n                    .replace(/&/g, \'&amp;\')\n                    .replace(/</g, \'&lt;\')\n                    .replace(/>/g, \'&gt;\')\n                    .replace(/"/g, \'&quot;\')\n                    .replace(/\'/g, \'&#039;\')\n                message.message_text = message.message_text.replace(urlPattern, "<a href=\'$1\'>$1</a>")\n                if (!newMessage) {\n                    // that.chatMessages.unshift(that.processMessage(message))\n                    // this.chatMessages.unshift(message)\n                    this.chatMessages.push(message)\n                    console.log(\'!newMessage\')\n                    this.scrollTo()\n                } else {\n                    this.chatMessages.push(message)\n                    console.log(\'newMessage\')\n                    this.scrollToEnd()\n                }\n\n            },\n            async sendChatMessage (type) {\n                this.message_loading = true;\n                // if (this.message_text !== \'\') {\n                if(this.audio_record!=null){\n                    this.files.push(this.audio_record)\n                }\n                if(this.image_record!=null){\n                    this.files.push(this.image_record)\n                }\n                if(this.file_record!=null){\n                    this.files.push(this.file_record)\n                }\n                var message = {\n                    message_text: this.message_text,\n                    date: new Date().toString(),\n                    conversation_id: this.currentChat.id,\n                    sender_id: this.user.id,\n                    type: type,\n                    files: this.files,\n                    senderInfo: this.user.info,\n                    selfMessage: true\n                }\n                let formData = new FormData();\n                formData.append("message", JSON.stringify(message));\n\n                for (var i = 0; i < this.files.length; i++) {\n                    let file = this.files[i].data;\n\n                    formData.append(\'files[\' + i + \']\', file);\n                }\n                await this.$store.dispatch(\'sendMessage\', formData).then(resp=>{\n                    this.onNewMessageAdded(resp.data.message, true);\n                    this.$store.commit(\'addChatMessage\', resp.data.message);\n                    this.message_loading = false;\n                });\n                this.clearMessage();\n                // }\n            },\n            scrollToEnd () {\n                this.$nextTick(() => {\n                    var container = this.$el.querySelector(\'.chat-container\')\n                    container.scrollTop = container.scrollHeight\n                })\n            },\n            scrollTo () {\n                this.$nextTick(() => {\n                    let currentHeight = this.$refs.chatContainer.scrollHeight\n                    let difference = currentHeight - this.totalChatHeight\n                    var container = this.$el.querySelector(\'.chat-container\')\n                    container.scrollTop = difference\n                })\n            },\n            addEmojiToMessage (emoji) {\n                this.message_text += emoji.value\n            },\n            toggleEmojiPanel () {\n                this.emojiPanel = !this.emojiPanel\n            },\n            onStream(stream) {\n                console.log(\'before countSeconds\')\n                this.countSeconds();\n                console.log(\'after countSeconds\')\n                console.log(\'Got a stream object:\', stream);\n                console.log(\'after stream object\')\n\n            },\n            onResult(data) {\n                var time = Date.now();\n                var date = new Date();\n                // this.files.push({\n                //     type: \'audio\',\n                //     name: \'record-\'+time+\'.mp3\',\n                //     src: window.URL.createObjectURL(data),\n                //     data: data,\n                //     date: date,\n                // })\n                this.audio_record = {\n                    type: \'audio\',\n                    name: \'record-\'+time+\'.mp3\',\n                    src: window.URL.createObjectURL(data),\n                    data: data,\n                    date: date,\n                    seconds: this.seconds\n                }\n                this.countSeconds();\n                this.message_mode=\'audio\';\n\n            },\n            handleFile() {\n                var time = Date.now();\n                var date = new Date();\n                let uploadedFile = this.$refs.file.files;\n                if (/\\.(jpe?g|png|svg)$/i.test(uploadedFile[0].name))\n                {\n                    let reader = new FileReader();\n                    reader.addEventListener("load", function() {\n                        this.preview = reader.result;\n                    }.bind(this), false);\n                    reader.readAsDataURL(uploadedFile[0]);\n                    // this.image_record = uploadedFile[0];\n                    this.image_record = {\n                        type: \'image\',\n                        name: uploadedFile[0].name,\n                        data: uploadedFile[0],\n                        date: date,\n                    }\n                    this.message_mode = \'image\';\n                }\n                else if(/\\.(pdf|txt|docx|doc)$/i.test(uploadedFile[0].name))\n                {\n                    // let reader = new FileReader();\n                    // reader.addEventListener("load", function() {\n                    //     this.preview = reader.result;\n                    // }.bind(this), false);\n                    // reader.readAsDataURL(uploadedFile[0]);\n                    // this.file_record = uploadedFile[0];\n                    this.file_record = {\n                        type: \'file\',\n                        name: uploadedFile[0].name,\n                        data: uploadedFile[0],\n                        date: date,\n                    }\n                    this.message_mode = \'file\';\n                    this.$nextTick(function() {\n                        this.preview = \'/images/LOGO-1.png\';\n                    });\n                }\n                else\n                {\n                    // this.$nextTick(function() {\n                    //     this.preview = \'/images/LOGO-1.png\';\n                    // });\n                    this.sendMessage(\'Неверный формат файла\')\n                    this.clearMessage();\n                }\n            },\n            clearMessage() {\n                this.message_text=\'\';\n                this.image_record=null;\n                this.audio_record=null;\n                this.file_record=null;\n                this.message_mode=\'text\'\n            },\n            countSeconds() {\n                console.log(\'this.flag 1\', this.flag )\n                this.flag = !this.flag\n                console.log(\'this.flag \', this.flag )\n                if (this.flag == true) {\n                    this.seconds=0;\n                    this.interval = setInterval(this.incrementSeconds, 1000);\n                }\n                else {\n                    clearInterval(this.interval)\n                    this.audio_record.seconds = this.seconds\n                }\n            },\n            incrementSeconds() {\n                this.seconds += 1;\n            },\n            runSearch () {\n                if(this.search.trim() === \'\')\n                {\n                    this.results = this.chats\n                }\n                else {\n                    // if(this.search.length > 2){\n                    //     this.options.minMatchCharLength=this.search.length\n                    // }\n                    this.$search(this.search, this.chats, this.options).then(result => {\n                        this.results = []\n                        result.forEach(item=>{\n                            this.results.push(item)\n                        })\n                    })\n                }\n                console.log(this.results)\n            },\n            open(){\n                this.$bvModal.show("new-chat");\n            },\n            cancel(){\n                this.$bvModal.hide("new-chat");\n            },\n            async createChat() {\n                this.loading = true;\n                var payload = {\n                    user_id: this.new_chat.user.id,\n                    name: this.new_chat.user.info.FullName\n                }\n                await this.$store.dispatch(\'createChat\', payload).then( resp => {\n                    this.$store.commit(\'addChat\', resp.data.chat)\n                    this.$store.commit(\'removeAvailableUser\', this.new_chat.user.id)\n                    this.loading=false;\n                    this.new_chat = {\n                        name:\'\',\n                        user:null\n                    };\n                    this.cancel();\n                })\n            },\n            sendMessage(message) {\n                this.$notify({\n                    group: \'info\',\n                    type: \'travel\',\n                    title: \'Сообщение от TravelClub\',\n                    text: message\n                });\n            },\n        }\n    }\n<\/script>\n\n<style scoped>\n    .form-control:focus {\n        color: #495057;\n        background-color: #fff;\n        border-color: #f08b23;\n        outline: 0;\n        box-shadow: 0 0 0 0.2rem rgba(240, 139, 35, 0.25);\n    }\n    .last_message{\n        max-height: 50px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    .active {\n        background: #f08b23 !important;\n        border-color: #f08b23 !important;\n    }\n    .scrollable {\n        overflow-y: auto;\n        max-height:calc(100vh - 6.9rem);\n        /*max-height:70vh;*/\n    }\n    .typer{\n        box-sizing: border-box;\n        display: flex;\n        align-items: center;\n        bottom: 0;\n        height: 4.9rem;\n        width: 100%;\n        background-color: #fff;\n        /*box-shadow: 0 -5px 10px -5px rgba(0,0,0,.2);*/\n        border: 2px solid #f08b23;\n        border-radius: 5px;\n    }\n    .typer input[type=text]{\n        position: absolute;\n        left: 2.5rem;\n        padding: 1rem;\n        width: 80%;\n        background-color: transparent;\n        border: none;\n        outline: none;\n        font-size: 1.25rem;\n    }\n    /*.typer button {*/\n    /*    color: #fff;*/\n    /*    background-color: #f8a105;*/\n    /*    border-color: #f8a105;*/\n    /*    outline: none !important;*/\n    /*}*/\n    /*.typer button:hover{*/\n    /*    color: #fff;*/\n    /*    background-color: #063065;*/\n    /*    border-color: #063065;*/\n    /*}*/\n    .chat-container{\n        box-sizing: border-box;\n        height: calc(95vh - 9.5rem);\n        overflow-y: auto;\n        padding: 10px;\n        /*background-color: #f2f2f2;*/\n        background-color: #fff;\n    }\n    .message{\n        margin-bottom: 8px;\n    }\n    .message.own{\n        text-align: right;\n    }\n    .message.own .content{\n        background-color: #ffc890;\n    }\n    .chat-container .username{\n        font-size: 18px;\n        font-weight: bold;\n    }\n    .chat-container .content{\n        padding: 8px;\n        /*background-color: lightgreen;*/\n        background-color: lightskyblue;\n        border-radius: 10px;\n        display:inline-block;\n        box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2), 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12);\n        max-width: 50%;\n        word-wrap: break-word;\n    }\n    @media (max-width: 480px) {\n        .chat-container .content{\n            max-width: 60%;\n        }\n    }\n    @media screen and (max-width: 576px) {\n        .chat-container {\n            height: calc(95vh - 6.8rem);\n        }\n    }\n    ::-webkit-file-upload-button {\n        cursor:pointer;\n    }\n    input[type="file"]{\n        /*opacity: 0;*/\n        /*width: 100%;*/\n        /*height: 70px;*/\n        /*position: absolute;*/\n        /*cursor: pointer;*/\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n    }\n    .preview{\n        height: 100%;\n        max-width: 90%;\n    }\n    .paperclip-button {\n        position: relative;\n        max-width: 45px;\n        max-height: 45px;\n        width: 100%;\n        height: 100%;\n        background: transparent;\n        color: #f08b23;\n        border-color: #f08b23 !important;\n        overflow: hidden;\n    }\n    .paperclip-button:hover {\n        color: #f08b23;\n        border-color: #f08b23 !important;\n    }\n    .paperclip-button:active {\n        background: #f08b23 !important;\n        color: #fff !important;\n    }\n    .paperclip-button:focus {\n        background: #f08b23 !important;\n        color: #fff !important;\n        outline: none !important;\n    }\n    .audio-button {\n        max-width: 45px;\n        max-height: 45px;\n        height: 100%;\n        width: 100%;\n        background-color: #f08b23;\n    }\n    .audio-button:hover {\n        background-color: #f08b23 !important;\n    }\n</style>\n<style>\n    .loading-wave-dots .wave-item:nth-child(2) {\n        margin-left: -20px;\n        -webkit-animation-delay: .14s !important;\n        animation-delay: .14s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(3) {\n        margin-left: -4px;\n        -webkit-animation-delay: .28s !important;\n        animation-delay: .28s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:nth-child(4) {\n        margin-left: 12px;\n        -webkit-animation-delay: .42s !important;\n        animation-delay: .42s !important;\n    }\n    .loading-wave-dots[data-v-46b20d22] .wave-item:last-child {\n        margin-left: 28px;\n        -webkit-animation-delay: .56s !important;\n        animation-delay: .56s !important;\n    }\n    .loading-wave-dots .wave-item {\n        -webkit-animation: wave-dots linear 2.8s infinite !important;\n        animation: wave-dots linear 2.8s infinite !important;\n    }\n    @keyframes wave-dots {\n        0% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #5b43f3;\n        }\n        10% {\n            -webkit-transform: translateY(-6px);\n            transform: translateY(-6px);\n            background: #5b43f3;\n        }\n        20% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #f3434b;\n        }\n        100% {\n            -webkit-transform: translateY(0);\n            transform: translateY(0);\n            background: #5b43f3;\n        }\n    }\n\n</style>\n'],sourceRoot:""}]);const r=o},79744:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function a(){a=function(){return t};var e,t={},n=Object.prototype,i=n.hasOwnProperty,o=Object.defineProperty||function(e,t,n){e[t]=n.value},r="function"==typeof Symbol?Symbol:{},l=r.iterator||"@@iterator",c=r.asyncIterator||"@@asyncIterator",d=r.toStringTag||"@@toStringTag";function h(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{h({},"")}catch(e){h=function(e,t,n){return e[t]=n}}function u(e,t,n,s){var a=t&&t.prototype instanceof A?t:A,i=Object.create(a.prototype),r=new D(s||[]);return o(i,"_invoke",{value:S(e,n,r)}),i}function g(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=u;var m="suspendedStart",p="suspendedYield",f="executing",b="completed",v={};function A(){}function w(){}function x(){}var _={};h(_,l,(function(){return this}));var C=Object.getPrototypeOf,y=C&&C(C(E([])));y&&y!==n&&i.call(y,l)&&(_=y);var k=x.prototype=A.prototype=Object.create(_);function M(e){["next","throw","return"].forEach((function(t){h(e,t,(function(e){return this._invoke(t,e)}))}))}function $(e,t){function n(a,o,r,l){var c=g(e[a],e,o);if("throw"!==c.type){var d=c.arg,h=d.value;return h&&"object"==s(h)&&i.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,r,l)}),(function(e){n("throw",e,r,l)})):t.resolve(h).then((function(e){d.value=e,r(d)}),(function(e){return n("throw",e,r,l)}))}l(c.arg)}var a;o(this,"_invoke",{value:function(e,s){function i(){return new t((function(t,a){n(e,s,t,a)}))}return a=a?a.then(i,i):i()}})}function S(t,n,s){var a=m;return function(i,o){if(a===f)throw Error("Generator is already running");if(a===b){if("throw"===i)throw o;return{value:e,done:!0}}for(s.method=i,s.arg=o;;){var r=s.delegate;if(r){var l=j(r,s);if(l){if(l===v)continue;return l}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if(a===m)throw a=b,s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);a=f;var c=g(t,n,s);if("normal"===c.type){if(a=s.done?b:p,c.arg===v)continue;return{value:c.arg,done:s.done}}"throw"===c.type&&(a=b,s.method="throw",s.arg=c.arg)}}}function j(t,n){var s=n.method,a=t.iterator[s];if(a===e)return n.delegate=null,"throw"===s&&t.iterator.return&&(n.method="return",n.arg=e,j(t,n),"throw"===n.method)||"return"!==s&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+s+"' method")),v;var i=g(a,t.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,v;var o=i.arg;return o?o.done?(n[t.resultName]=o.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,v):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,v)}function L(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function F(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function D(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(L,this),this.reset(!0)}function E(t){if(t||""===t){var n=t[l];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var a=-1,o=function n(){for(;++a<t.length;)if(i.call(t,a))return n.value=t[a],n.done=!1,n;return n.value=e,n.done=!0,n};return o.next=o}}throw new TypeError(s(t)+" is not iterable")}return w.prototype=x,o(k,"constructor",{value:x,configurable:!0}),o(x,"constructor",{value:w,configurable:!0}),w.displayName=h(x,d,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===w||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,h(e,d,"GeneratorFunction")),e.prototype=Object.create(k),e},t.awrap=function(e){return{__await:e}},M($.prototype),h($.prototype,c,(function(){return this})),t.AsyncIterator=$,t.async=function(e,n,s,a,i){void 0===i&&(i=Promise);var o=new $(u(e,n,s,a),i);return t.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},M(k),h(k,d,"Generator"),h(k,l,(function(){return this})),h(k,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var s in t)n.push(s);return n.reverse(),function e(){for(;n.length;){var s=n.pop();if(s in t)return e.value=s,e.done=!1,e}return e.done=!0,e}},t.values=E,D.prototype={constructor:D,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(F),!t)for(var n in this)"t"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(s,a){return r.type="throw",r.arg=t,n.next=s,a&&(n.method="next",n.arg=e),!!a}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],r=o.completion;if("root"===o.tryLoc)return s("end");if(o.tryLoc<=this.prev){var l=i.call(o,"catchLoc"),c=i.call(o,"finallyLoc");if(l&&c){if(this.prev<o.catchLoc)return s(o.catchLoc,!0);if(this.prev<o.finallyLoc)return s(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return s(o.catchLoc,!0)}else{if(!c)throw Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return s(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&i.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,v):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),v},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),F(n),v}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var s=n.completion;if("throw"===s.type){var a=s.arg;F(n)}return a}}throw Error("illegal catch attempt")},delegateYield:function(t,n,s){return this.delegate={iterator:E(t),resultName:n,nextLoc:s},"next"===this.method&&(this.arg=e),v}},t}function i(e,t,n,s,a,i,o){try{var r=e[i](o),l=r.value}catch(e){return void n(e)}r.done?t(l):Promise.resolve(l).then(s,a)}function o(e){return function(){var t=this,n=arguments;return new Promise((function(s,a){var o=e.apply(t,n);function r(e){i(o,s,a,r,l,"next",e)}function l(e){i(o,s,a,r,l,"throw",e)}r(void 0)}))}}const r={data:function(){return{message_text:"",audio_record:null,image_record:null,file_record:null,message_mode:"text",preview:"",message_loading:!1,flag:!1,seconds:0,interval:"",files:[],currentChat:{},chatMessages:[],emojiPanel:!1,currentRef:{},loading:!1,totalChatHeight:0,search:"",results:[],options:{shouldSort:!0,threshold:.2,keys:["manager_title","client_title"]},new_chat:{name:"",user:null},load:!1}},mounted:function(){this.chatMessages=[],this.loadChat(),this.getUser(),console.log("this.chatMessages",this.chatMessages),console.log("this.currentChat",this.currentChat)},computed:{messages:function(){return this.chatMessages},chats:function(){return this.$store.getters.chats},user:function(){return this.$store.getters.user},available_users:function(){return this.$store.getters.available_users},filteredChats:function(){return""===this.search.trim()?this.chats:this.results}},watch:{"$route.params.id":function(e,t){console.log("here wattch"),this.loadChat()}},methods:{toChat:function(e){this.$router.push("/"+this.user.role+"/chat/"+e)},getUser:function(){var e=this;return o(a().mark((function t(){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.user){t.next=3;break}return t.next=3,e.$store.dispatch("getUser").then((function(){}));case 3:case"end":return t.stop()}}),t)})))()},loadChat:function(){var e=this;return o(a().mark((function t(){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!(e.chats.length<=0)){t.next=5;break}return t.next=3,e.$store.dispatch("loadUserChats").then((function(){e.totalChatHeight=e.$refs.chatContainer.scrollHeight,e.loading=!1,e.load=!0,void 0!==e.$route.params.id&&(e.chatMessages=[],e.currentChat=e.chats.find((function(t){if(t.id==e.$route.params.id)return!0})),e.currentChat.messages.forEach((function(t){e.onNewMessageAdded(t,!1)})))}));case 3:t.next=8;break;case 5:e.totalChatHeight=e.$refs.chatContainer.scrollHeight,e.loading=!1,void 0!==e.$route.params.id&&(e.chatMessages=[],e.currentChat=e.chats.find((function(t){if(t.id==e.$route.params.id)return!0})),e.currentChat.messages.forEach((function(t){e.onNewMessageAdded(t,!1)})));case 8:case"end":return t.stop()}}),t)})))()},onScroll:function(){if(this.$refs.chatContainer.scrollTop<100&&!this.loading){if(this.totalChatHeight=this.$refs.chatContainer.scrollHeight,this.loading=!0,void 0===this.chatMessages[0])return void(this.loading=!1);this.loading=!1}},processMessage:function(e){var t=/([^\s\']+).(?:jpg|jpeg|gif|png)/i;t.test(e.message_text)&&(e.image=t.exec(e.message_text)[0]);var n=/((?:[\u2600-\u27BF\u2934-\uFFFF]|[\uD800-\uD83B][\uDC00-\uDFFF]|\uD83C[\uDC00-\uDD8E\uDD91-\uDE51\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F\uDE80-\uDEFF]|\uD83E[\uDD00-\uDDFF]))/g;return n.test(e.message_text)&&(e.message_text=e.message_text.replace(n,'<span class="emoji">$1</span>')),e},onNewMessageAdded:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];e.message_text=e.message_text.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;"),e.message_text=e.message_text.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1'>$1</a>"),t?(this.chatMessages.push(e),console.log("newMessage"),this.scrollToEnd()):(this.chatMessages.push(e),console.log("!newMessage"),this.scrollTo())},sendChatMessage:function(e){var t=this;return o(a().mark((function n(){var s,i,o,r;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:for(t.message_loading=!0,null!=t.audio_record&&t.files.push(t.audio_record),null!=t.image_record&&t.files.push(t.image_record),null!=t.file_record&&t.files.push(t.file_record),s={message_text:t.message_text,date:(new Date).toString(),conversation_id:t.currentChat.id,sender_id:t.user.id,type:e,files:t.files,senderInfo:t.user.info,selfMessage:!0},(i=new FormData).append("message",JSON.stringify(s)),o=0;o<t.files.length;o++)r=t.files[o].data,i.append("files["+o+"]",r);return n.next=10,t.$store.dispatch("sendMessage",i).then((function(e){t.onNewMessageAdded(e.data.message,!0),t.$store.commit("addChatMessage",e.data.message),t.message_loading=!1}));case 10:t.clearMessage();case 11:case"end":return n.stop()}}),n)})))()},scrollToEnd:function(){var e=this;this.$nextTick((function(){var t=e.$el.querySelector(".chat-container");t.scrollTop=t.scrollHeight}))},scrollTo:function(){var e=this;this.$nextTick((function(){var t=e.$refs.chatContainer.scrollHeight-e.totalChatHeight;e.$el.querySelector(".chat-container").scrollTop=t}))},addEmojiToMessage:function(e){this.message_text+=e.value},toggleEmojiPanel:function(){this.emojiPanel=!this.emojiPanel},onStream:function(e){console.log("before countSeconds"),this.countSeconds(),console.log("after countSeconds"),console.log("Got a stream object:",e),console.log("after stream object")},onResult:function(e){var t=Date.now(),n=new Date;this.audio_record={type:"audio",name:"record-"+t+".mp3",src:window.URL.createObjectURL(e),data:e,date:n,seconds:this.seconds},this.countSeconds(),this.message_mode="audio"},handleFile:function(){Date.now();var e=new Date,t=this.$refs.file.files;if(/\.(jpe?g|png|svg)$/i.test(t[0].name)){var n=new FileReader;n.addEventListener("load",function(){this.preview=n.result}.bind(this),!1),n.readAsDataURL(t[0]),this.image_record={type:"image",name:t[0].name,data:t[0],date:e},this.message_mode="image"}else/\.(pdf|txt|docx|doc)$/i.test(t[0].name)?(this.file_record={type:"file",name:t[0].name,data:t[0],date:e},this.message_mode="file",this.$nextTick((function(){this.preview="/images/LOGO-1.png"}))):(this.sendMessage("Неверный формат файла"),this.clearMessage())},clearMessage:function(){this.message_text="",this.image_record=null,this.audio_record=null,this.file_record=null,this.message_mode="text"},countSeconds:function(){console.log("this.flag 1",this.flag),this.flag=!this.flag,console.log("this.flag ",this.flag),1==this.flag?(this.seconds=0,this.interval=setInterval(this.incrementSeconds,1e3)):(clearInterval(this.interval),this.audio_record.seconds=this.seconds)},incrementSeconds:function(){this.seconds+=1},runSearch:function(){var e=this;""===this.search.trim()?this.results=this.chats:this.$search(this.search,this.chats,this.options).then((function(t){e.results=[],t.forEach((function(t){e.results.push(t)}))})),console.log(this.results)},open:function(){this.$bvModal.show("new-chat")},cancel:function(){this.$bvModal.hide("new-chat")},createChat:function(){var e=this;return o(a().mark((function t(){var n;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e.loading=!0,n={user_id:e.new_chat.user.id,name:e.new_chat.user.info.FullName},t.next=4,e.$store.dispatch("createChat",n).then((function(t){e.$store.commit("addChat",t.data.chat),e.$store.commit("removeAvailableUser",e.new_chat.user.id),e.loading=!1,e.new_chat={name:"",user:null},e.cancel()}));case 4:case"end":return t.stop()}}),t)})))()},sendMessage:function(e){this.$notify({group:"info",type:"travel",title:"Сообщение от TravelClub",text:e})}}};var l=n(85072),c=n.n(l),d=n(18646),h={insert:"head",singleton:!1};c()(d.A,h);d.A.locals;var u=n(90062),g={insert:"head",singleton:!1};c()(u.A,g);u.A.locals;const m=(0,n(14486).A)(r,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"container-fluid",staticStyle:{padding:"0"}},[t("b-modal",{attrs:{id:"new-chat",title:"Создать чат"},scopedSlots:e._u([{key:"modal-footer",fn:function(){return[t("div",{staticClass:"w-100"},[t("b-button",{staticClass:"float-right",staticStyle:{background:"linear-gradient(0deg, #ffbf00 0%, #f08b23 100%)","background-color":"#f08b23 !important","border-color":"#f08b23 !important"},attrs:{disabled:null==e.new_chat.user||""==e.new_chat.user||e.loading},on:{click:e.createChat}},[e.loading?t("b-spinner",{attrs:{small:""}}):e._e(),e._v(" "),e.loading?t("span",{staticClass:"sr-only"},[e._v("Loading...")]):e._e(),e._v("\n                    Создать\n                ")],1),e._v(" "),t("b-button",{staticClass:"float-right mr-2",staticStyle:{background:"linear-gradient(0deg, #ffbf00 0%, #f08b23 100%)","background-color":"#f08b23 !important","border-color":"#f08b23 !important"},on:{click:e.cancel}},[e._v("\n                    Отмена\n                ")])],1)]},proxy:!0}])},[t("div",{staticClass:"row w-100 mt-2 mx-auto"},[t("multiselect",{staticStyle:{"line-height":"1.5","font-size":"0.765625rem",margin:"auto"},attrs:{placeholder:"Начать чат с...",optionHeight:29,showLabels:!1,options:e.available_users,multiple:!1,label:"info.FullName","track-by":"id",taggable:!0,searchable:!0,hideSelected:!0},scopedSlots:e._u([{key:"singleLabel",fn:function(n){return[t("span",{staticClass:"option__title"},[e._v(e._s(n.option.info.FullName))])]}},{key:"option",fn:function(n){return[t("span",{staticClass:"option__title"},[e._v(e._s(n.option.info.FullName))])]}}]),model:{value:e.new_chat.user,callback:function(t){e.$set(e.new_chat,"user",t)},expression:"new_chat.user"}})],1)]),e._v(" "),t("div",{staticClass:"row w-100 m-auto align-items-start justify-content-center"},[t("div",{staticClass:"col-sm-4 desktop scrollable",staticStyle:{position:"relative"}},[t("div",{staticClass:"row w-100 m-auto"},[t("div",{staticClass:"col-12 pt-3 px-0"},[t("div",{staticClass:"row w-100 mx-auto",staticStyle:{position:"sticky","z-index":"3",top:"0px"}},[t("div",{staticClass:"col-12 p-0"},[t("div",{staticClass:"row w-100 m-auto justify-content-center align-items-center py-2",staticStyle:{background:"#f08b23",color:"white","border-radius":"5px"}},[e._m(0),e._v(" "),t("div",{staticClass:"col-6 col-sm-6"},[e.available_users.length>0&&"client"!=e.user.role?t("span",{staticClass:"chat-name ml-auto mr-0",staticStyle:{"font-size":"25px",float:"right"},on:{click:e.open}},[t("b-icon",{attrs:{icon:"plus-circle-fill"}})],1):e._e()])])]),e._v(" "),t("div",{staticClass:"col-12 p-0"},[t("div",{staticClass:"row w-100 mx-auto mt-2"},[t("b-form-input",{staticClass:"mb-0 travel-input",attrs:{placeholder:"Поиск чата"},on:{input:e.runSearch},model:{value:e.search,callback:function(t){e.search=t},expression:"search"}})],1)])])]),e._v(" "),e.chats.length<=0&&0==e.load?t("div",{staticClass:"col-12 pt-2 px-0"},[t("div",{staticClass:"row w-100 m-auto"},e._l(5,(function(n){return t("div",{key:n,staticClass:"col-12 skeleton-tr pt-2 px-0"},[t("div",{staticClass:"list-group"},[t("div",{staticClass:"list-group-item list-group-item-action flex-column align-items-start"},[t("div",{staticClass:"d-flex w-100 justify-content-between"},[t("div",{staticClass:"row m-auto w-100"},[t("div",{staticClass:"col-8 skeleton-tr p-2 mr-auto"},[t("tb-skeleton",{attrs:{height:15,theme:"opacity","bg-color":"#dcdbdc",shape:"radius"}})],1),e._v(" "),t("div",{staticClass:"col-2 skeleton-tr p-2 ml-auto float-right"},[t("tb-skeleton",{attrs:{height:15,theme:"opacity","bg-color":"#dcdbdc",shape:"radius"}})],1)])]),e._v(" "),t("div",[t("div",{staticClass:"row m-auto w-100"},[t("div",{staticClass:"col-4 skeleton-tr p-2"},[t("tb-skeleton",{attrs:{height:10,theme:"opacity","bg-color":"#dcdbdc",shape:"radius"}})],1)]),e._v(" "),t("div",{staticClass:"row m-auto w-100"},[t("div",{staticClass:"col-2 skeleton-tr p-2"},[t("tb-skeleton",{attrs:{height:5,theme:"opacity","bg-color":"#dcdbdc",shape:"radius"}})],1)])])])])])})),0)]):e._e(),e._v(" "),e.chats.length<=0&&1==e.load?t("div",{staticClass:"col-12 pt-2 px-0"},[e._m(1)]):e._e(),e._v(" "),e._l(e.filteredChats,(function(n){return t("div",{key:n.id,staticClass:"col-12 pt-2 px-0"},[t("div",{staticClass:"list-group"},[t("div",{staticClass:"list-group-item list-group-item-action flex-column align-items-start",class:{active:n.id==e.$route.params.id},staticStyle:{cursor:"pointer"},on:{click:function(t){return e.toChat(n.id)}}},[t("div",{staticClass:"d-flex w-100 justify-content-between"},[n.creator_id==e.user.id?t("h5",{staticClass:"mb-1"},[e._v(e._s(n.manager_title))]):t("h5",{staticClass:"mb-1"},[e._v(e._s(n.client_title))]),e._v(" "),n.messages.length>0?t("small",[e._v(e._s(e._f("moment")(n.messages[n.messages.length-1].created_at,"from","now")))]):e._e()]),e._v(" "),n.messages.length>0?t("div",[t("p",{staticClass:"mb-1 last_message"},[e._v(e._s(n.messages[n.messages.length-1].message_text))]),e._v(" "),t("small",[e._v(e._s(n.messages[n.messages.length-1].senderInfo.FirstName)+"\n                                    "),""!=n.messages[n.messages.length-1].senderInfo.MiddleName||null!=n.messages[n.messages.length-1].senderInfo.MiddleName?t("span",[e._v("\n                                        "+e._s(n.messages[n.messages.length-1].senderInfo.MiddleName)+"\n                                    ")]):e._e()])]):t("div",[t("p",{staticClass:"mb-1 last_message"},[e._v("В этой беседе ещё нет сообщений")])])])])])}))],2)]),e._v(" "),t("div",{staticClass:"col-12 col-md-8",staticStyle:{position:"relative"}},[t("div",{ref:"chatContainer",staticClass:"chat-container",on:{scroll:e.onScroll}},[t("message",{attrs:{messages:e.chatMessages}})],1),e._v(" "),"text"==e.message_mode?t("div",{staticClass:"typer"},[t("b-button",{staticClass:"rounded-circle border p-0 mx-1 paperclip-button",attrs:{disabled:e.message_loading}},[t("input",{ref:"file",attrs:{type:"file",id:"file"},on:{change:function(t){return e.handleFile()}}}),e._v(" "),t("b-icon",{attrs:{icon:"paperclip",scale:"2","aria-hidden":"true"}})],1),e._v(" "),t("b-form-textarea",{staticClass:"mx-1",attrs:{id:"textarea",size:"sm",placeholder:"Напишите сообщение...",rows:"1","max-rows":"2","no-resize":""},on:{keydown:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")||t.ctrlKey||t.shiftKey||t.altKey||t.metaKey?null:(t.preventDefault(),e.sendChatMessage("text"))}},model:{value:e.message_text,callback:function(t){e.message_text=t},expression:"message_text"}}),e._v(" "),""==e.message_text.trim()&&"text"==e.message_mode?t("vue-record-audio",{staticClass:"audio-button mx-1",attrs:{mode:"press"},on:{stream:e.onStream,result:e.onResult}}):t("b-button",{staticClass:"audio-button rounded-circle p-2 mx-1 text-white border-0",attrs:{disabled:e.message_loading},on:{click:function(t){return e.sendChatMessage("text")}}},[e.message_loading?e._e():t("i",{staticClass:"bi-blank icon-send b-icon bi m-0 w-auto h-auto",staticStyle:{"font-size":"25px"}}),e._v(" "),e.message_loading?t("b-spinner",{attrs:{small:""}}):e._e(),e._v(" "),e.message_loading?t("span",{staticClass:"sr-only"},[e._v("Loading...")]):e._e()],1)],1):e._e(),e._v(" "),"image"==e.message_mode?t("div",{staticClass:"typer"},[t("b-button",{staticClass:"rounded-circle border p-0 mx-1 paperclip-button",attrs:{disabled:e.message_loading},on:{click:e.clearMessage}},[t("b-icon",{attrs:{icon:"x",scale:"2","aria-hidden":"true"}})],1),e._v(" "),t("div",{staticClass:"row m-auto p-2 w-100 h-100 align-items-center justify-content-center"},[t("div",{staticClass:"col-4 h-100 text-center"},[t("img",{staticClass:"preview",attrs:{src:e.preview}})]),e._v(" "),t("div",{staticClass:"col-8 p-0 p-sm-1 p-md-2 h-100"},[t("div",{staticStyle:{"text-overflow":"ellipsis",overflow:"hidden",width:"100%",height:"100%"}},[e._v(e._s(e.image_record.name))])])]),e._v(" "),t("b-button",{staticClass:"audio-button rounded-circle p-2 mx-1 text-white border-0",attrs:{disabled:e.message_loading},on:{click:function(t){return e.sendChatMessage("image")}}},[e.message_loading?e._e():t("i",{staticClass:"bi-blank icon-send b-icon bi m-0 w-auto h-auto",staticStyle:{"font-size":"25px"}}),e._v(" "),e.message_loading?t("b-spinner",{attrs:{small:""}}):e._e(),e._v(" "),e.message_loading?t("span",{staticClass:"sr-only"},[e._v("Loading...")]):e._e()],1)],1):e._e(),e._v(" "),"file"==e.message_mode?t("div",{staticClass:"typer"},[t("b-button",{staticClass:"rounded-circle border p-0 mx-1 paperclip-button",attrs:{disabled:e.message_loading},on:{click:e.clearMessage}},[t("b-icon",{attrs:{icon:"x",scale:"2","aria-hidden":"true"}})],1),e._v(" "),t("div",{staticClass:"row m-auto p-2 w-100 h-100 align-items-center justify-content-center"},[t("div",{staticClass:"col-4 h-100 text-center"},[t("img",{staticClass:"preview",attrs:{src:e.preview}})]),e._v(" "),t("div",{staticClass:"col-8 p-0 p-sm-1 p-md-2 h-100"},[t("div",{staticStyle:{"text-overflow":"ellipsis",overflow:"hidden",width:"100%",height:"100%"}},[e._v(e._s(e.file_record.name))])])]),e._v(" "),t("b-button",{staticClass:"audio-button rounded-circle p-2 mx-1 text-white border-0",attrs:{disabled:e.message_loading},on:{click:function(t){return e.sendChatMessage("file")}}},[e.message_loading?e._e():t("i",{staticClass:"bi-blank icon-send b-icon bi m-0 w-auto h-auto",staticStyle:{"font-size":"25px"}}),e._v(" "),e.message_loading?t("b-spinner",{attrs:{small:""}}):e._e(),e._v(" "),e.message_loading?t("span",{staticClass:"sr-only"},[e._v("Loading...")]):e._e()],1)],1):e._e(),e._v(" "),"audio"==e.message_mode?t("div",{staticClass:"typer justify-content-between"},[t("b-button",{staticClass:"rounded-circle border p-0 mx-1 paperclip-button",attrs:{disabled:e.message_loading},on:{click:e.clearMessage}},[t("b-icon",{attrs:{icon:"x",scale:"2","aria-hidden":"true"}})],1),e._v(" "),t("audio-player",{staticStyle:{width:"60%"},attrs:{audio:e.audio_record,type:"file"}}),e._v(" "),t("b-button",{staticClass:"audio-button rounded-circle p-2 mx-1 text-white border-0",attrs:{disabled:e.message_loading},on:{click:function(t){return e.sendChatMessage("audio")}}},[e.message_loading?e._e():t("i",{staticClass:"bi-blank icon-send b-icon bi m-0 w-auto h-auto",staticStyle:{"font-size":"25px"}}),e._v(" "),e.message_loading?t("b-spinner",{attrs:{small:""}}):e._e(),e._v(" "),e.message_loading?t("span",{staticClass:"sr-only"},[e._v("Loading...")]):e._e()],1)],1):e._e()])])],1)}),[function(){var e=this._self._c;return e("div",{staticClass:"col-6 col-sm-6"},[e("p",{staticClass:"my-auto"},[e("span",{staticClass:"chat-name"},[this._v("Чаты")])])])},function(){var e=this._self._c;return e("div",{staticClass:"row w-100 mx-auto mb-2"},[e("p",[this._v("Пока у Вас нет никаких чатов")])])}],!1,null,"1deea1f8",null).exports}}]);
//# sourceMappingURL=9744.js.map